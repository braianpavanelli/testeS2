@model TesteS2IT.Models.Games

@using (Html.BeginForm("Edit", "Games", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Games</h4>
        <hr />
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            <div class="col-7">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UrlImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UrlImage, new { htmlAttributes = new { @class = "form-control" } })
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <input class="btn btn-default btn-file" type="file" name="file" />
                        </div>
                        @Html.ValidationMessageFor(model => model.UrlImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Salvar" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div class="col-4" >
                <div class="row" style="height: 300px;">
                    @if (!string.IsNullOrEmpty(Model.UrlImage))
                {
                        <img style="max-height:100%; max-width:100%;" src="@Url.Content(Model.UrlImage)" alt="@Model.Name" />
                    }
                    else
                    {
                        <img style="max-height:100%; max-width:100%;" src="~/Images/no_picture_game.png" alt="Jogo Sem Imagem" />
                    }
                </div>
                <div class="row">
                    <button type="button" class="btn btn-danger" data-item="@Model.ID">Excluir Imagem</button>
                    @*@Html.ActionLink("Excluir Imagem", "DeleteImage", new { id = Model.ID }, new { @class = "btn btn-danger" })*@
                </div>
            </div>
        </div>



    </div>

}

<div>
    @Html.ActionLink("Voltar para Lista", "Index")
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".btn-danger").click(function () {
                var id = $(this).attr('data-item');
                if (confirm("Você quer realmente remover esta imagem?")) {
                    $.ajax({
                        method: "POST",
                        url: "/Games/DeleteImage/" + id,
                        success: function (data) {
                            window.location.href = data.Url;
                        },
                        error: function (data) {
                            alert("Houve um erro na pesquisa.");
                        }
                    });
                }
            });
        });
    </script>
}


